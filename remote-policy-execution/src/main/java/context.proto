/*
 * Copyright 2020 Google LLC
 *
 * <p>Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * <p>https://www.apache.org/licenses/LICENSE-2.0
 *
 * <p>Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
 * express or implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package apigee;

import "google/protobuf/any.proto";

option java_package = "com.google.apigee";

message MessageContext {
  map<string, string> diagnostic = 1;
  int64 age_nano = 2;
  string message_ttl = 3;
  Message message = 4;
  Message proxy_request_message = 5;
  Message target_request_message = 6;
  Message target_response_message = 7;
  Message proxy_response_message = 8;
  Message error_message = 9;
  map<string, string> logging_context_map = 10;
  MessageFlowImpl message_flow = 11;
  Expression expression = 12;
  string message_id = 13;

  message Message {
    TransportMessage transport_message = 1;

    message TransportMessage {
      HttpMessage http_message = 1;

      message HttpMessage {
        HTTPVersion version = 1;
        google.protobuf.Any headers = 2;
        google.protobuf.Any body = 3;
        HTTPMethod method = 4;
        HTTPMethod request_method = 5;
        string host = 6;
        string request_url = 7;

        message HTTPVersion {
          int32 major_version = 1;
          int32 minor_version = 2;
        }
      }

      message HTTPMethod {
        string name = 1;
      }
    }
  }
}

message ExecutionContext {
    MessageFlowImpl message_flow_impl = 1;
}

message MessageFlowImpl {
  MessageContext message_context = 1;
  FlowEvaluator evaluator = 2;
  FlowContext flow_context = 3;
  FlowState error_source_state = 4;
  bool fault_record_added = 5;

  message FlowEvaluator {
    google.protobuf.Any root_context = 1;
  }

  message FlowContext {
    DecisionTreeIterator decision_tree_iterator = 7;
    FlowState flow_state = 8;

    message DecisionTreeIterator {
      DecisionTree root_node = 1;
      DecisionTree current_node = 2;
      google.protobuf.Any data_provider = 3;

      message DecisionTree {
        Name name = 1;
        Expression expression = 2;
        google.protobuf.Any data = 3;

        message Name {
          Name parent_name = 1;
          repeated string fragments = 2;
        }
      }
    }
  }

  enum FlowState {
    REQ_START = 0;
    REQ_HEADERS_PARSED = 1;
    REQ_PAYLOAD_PARSED = 2;
    PROXY_REQ_FLOW = 3;
    TARGET_REQ_FLOW = 4;
    REQ_SENT = 5;
    RESP_START = 6;
    TARGET_RESP_FLOW = 7;
    PROXY_RESP_FLOW = 8;
    RESP_SENT = 9;
    END = 10;
    ERROR = 11;
    API_TIMEOUT = 12;
    ABORT = 13;
    PROXY_POST_RESP_SENT = 14;
    SHARED_FLOW = 15;
    DEBUG_SESSION = 16;
  }
}

message Expression {
  string name = 1;
}